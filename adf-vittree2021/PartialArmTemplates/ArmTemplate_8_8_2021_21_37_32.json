{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-vittree2021"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy products",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_products_excel",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ds_products_csv",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Copy products category",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_products_category",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ds_products_category_target",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Copy products subcategory",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_products_subcategory_source",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ds_products_subcategory_target",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Copy customers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_customers_source",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ds_customers_target",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Copy transaction sales",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_transactionssales_source",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ds_transactionssales_target",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Copy transaction sales returns",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_transactionsreturns_source",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "ds_transactionsreturns_target",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_customers_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_customers_target')]",
				"[concat(variables('factoryId'), '/datasets/ds_transactionssales_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_transactionssales_target')]",
				"[concat(variables('factoryId'), '/datasets/ds_transactionsreturns_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_transactionsreturns_target')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_copy_csvtoSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_products_csv",
								"type": "DatasetReference"
							},
							"name": "SourceProducts"
						},
						{
							"dataset": {
								"referenceName": "ds_products_subcategory_target",
								"type": "DatasetReference"
							},
							"name": "SourceProductsSubcategory"
						},
						{
							"dataset": {
								"referenceName": "ds_products_category_target",
								"type": "DatasetReference"
							},
							"name": "sourceProductsCategory"
						},
						{
							"dataset": {
								"referenceName": "ds_customers_target",
								"type": "DatasetReference"
							},
							"name": "SourceCustomers"
						},
						{
							"dataset": {
								"referenceName": "ds_transactionssales_target",
								"type": "DatasetReference"
							},
							"name": "sourceTransactionSales"
						},
						{
							"dataset": {
								"referenceName": "ds_transactionsreturns_target",
								"type": "DatasetReference"
							},
							"name": "sourceTransactionReturn"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_products_table",
								"type": "DatasetReference"
							},
							"name": "SinkProducts"
						},
						{
							"dataset": {
								"referenceName": "ds_product_category_table",
								"type": "DatasetReference"
							},
							"name": "SinkProductsCategory"
						},
						{
							"dataset": {
								"referenceName": "ds_products_subcategory_table",
								"type": "DatasetReference"
							},
							"name": "SinkProductsSubcategory"
						},
						{
							"dataset": {
								"referenceName": "ds_customerTable",
								"type": "DatasetReference"
							},
							"name": "sinkCustomers"
						},
						{
							"dataset": {
								"referenceName": "ds_transactionsales_table",
								"type": "DatasetReference"
							},
							"name": "sinkTransactionSales"
						},
						{
							"dataset": {
								"referenceName": "ds_transactionreturns_table",
								"type": "DatasetReference"
							},
							"name": "sinkTransactionsReturns"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tProductKey as integer,\n\t\tProductLabel as integer,\n\t\tProductName as string,\n\t\tProductDescription as string,\n\t\tProductSubcategoryKey as string,\n\t\tManufacturer as string,\n\t\tBrandName as string,\n\t\tClassID as integer,\n\t\tClassName as string,\n\t\tStyleID as integer,\n\t\tStyleName as string,\n\t\tColorID as integer,\n\t\tColorName as string,\n\t\tSize as string,\n\t\tSizeRange as string,\n\t\tSizeUnitMeasureID as string,\n\t\tWeight as float,\n\t\tWeightUnitMeasureID as integer,\n\t\tUnitOfMeasureID as string,\n\t\tUnitOfMeasureName as string,\n\t\tStockTypeID as integer,\n\t\tStockTypeName as string,\n\t\tUnitCost as double,\n\t\tUnitPrice as double,\n\t\tAvailableForSaleDate as date,\n\t\tStopSaleDate as date,\n\t\tStatus as string,\n\t\tImageURL as string,\n\t\tProductURL as string,\n\t\tETLLoadID as integer,\n\t\tLoadDate as date,\n\t\tUpdateDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceProducts\nsource(output(\n\t\tProductSubcategoryKey as integer,\n\t\tProductSubcategoryLabel as integer,\n\t\tProductSubcategoryName as string,\n\t\tProductSubcategoryDescription as string,\n\t\tProductCategoryKey as integer,\n\t\tETLLoadID as integer,\n\t\tLoadDate as date,\n\t\tUpdateDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceProductsSubcategory\nsource(output(\n\t\tProductCategoryKey as integer,\n\t\tProductCategoryLabel as integer,\n\t\tProductCategoryName as string,\n\t\tProductCategoryDescription as string,\n\t\tETLLoadID as integer,\n\t\tLoadDate as date,\n\t\tUpdateDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sourceProductsCategory\nsource(output(\n\t\t{#} as integer,\n\t\t{BP Code} as string,\n\t\t{BP Name} as string,\n\t\t{BP Type} as string,\n\t\tActive as string,\n\t\t{Bill-to City} as string,\n\t\t{Bill-to State} as string,\n\t\t{BP Currency} as string,\n\t\t{Bill-to Country} as string,\n\t\tZone as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceCustomers\nsource(output(\n\t\tTransId as integer,\n\t\tcus as string,\n\t\tinvoicenum as string,\n\t\tinvoicedate as date,\n\t\tItemCode as integer,\n\t\tDscription as string,\n\t\tQuantity as integer,\n\t\t{Price for one UNIT} as float\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sourceTransactionSales\nsource(output(\n\t\tTransId as integer,\n\t\tcus as string,\n\t\tRINoicenum as string,\n\t\tRINoicedate as date,\n\t\tItemCode as integer,\n\t\tDscription as string,\n\t\tQuantity as integer,\n\t\t{Price Per Unit} as float\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sourceTransactionReturn\nSourceProducts sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tProductKey as integer,\n\t\tProductLabel as integer,\n\t\tProductName as string,\n\t\tProductDescription as string,\n\t\tProductSubcategoryKey as integer,\n\t\tManufacturer as string,\n\t\tBrandName as string,\n\t\tClassID as integer,\n\t\tClassName as string,\n\t\tStyleID as integer,\n\t\tStyleName as string,\n\t\tColorID as integer,\n\t\tColorName as string,\n\t\tSize as string,\n\t\tSizeRange as string,\n\t\tSizeUnitMeasureID as string,\n\t\tWeight as decimal(10,2),\n\t\tWeightUnitMeasureID as integer,\n\t\tUnitOfMeasureID as string,\n\t\tUnitOfMeasureName as string,\n\t\tStockTypeID as integer,\n\t\tStockTypeName as string,\n\t\tUnitCost as decimal(23,2),\n\t\tUnitPrice as decimal(23,2),\n\t\tAvailableForSaleDate as date,\n\t\tStopSaleDate as date,\n\t\tStatus as string,\n\t\tImageURL as string,\n\t\tProductURL as string,\n\t\tETLLoadID as integer,\n\t\tLoadDate as date,\n\t\tUpdateDate as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tProductKey,\n\t\tProductLabel,\n\t\tProductName,\n\t\tProductDescription,\n\t\tProductSubcategoryKey,\n\t\tManufacturer,\n\t\tBrandName,\n\t\tClassID,\n\t\tClassName,\n\t\tStyleID,\n\t\tStyleName,\n\t\tColorID,\n\t\tColorName,\n\t\tSize,\n\t\tSizeRange,\n\t\tSizeUnitMeasureID,\n\t\tWeight,\n\t\tWeightUnitMeasureID,\n\t\tUnitOfMeasureID,\n\t\tUnitOfMeasureName,\n\t\tStockTypeID,\n\t\tStockTypeName,\n\t\tUnitCost,\n\t\tUnitPrice,\n\t\tAvailableForSaleDate,\n\t\tStopSaleDate,\n\t\tStatus,\n\t\tImageURL,\n\t\tProductURL,\n\t\tETLLoadID,\n\t\tLoadDate,\n\t\tUpdateDate\n\t)) ~> SinkProducts\nsourceProductsCategory sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tProductCategoryKey as integer,\n\t\tProductCategoryLabel as integer,\n\t\tProductCategoryName as string,\n\t\tProductCategoryDescription as string,\n\t\tETLLoadID as integer,\n\t\tLoadDate as date,\n\t\tUpdateDate as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tProductCategoryKey,\n\t\tProductCategoryLabel,\n\t\tProductCategoryName,\n\t\tProductCategoryDescription,\n\t\tETLLoadID,\n\t\tLoadDate,\n\t\tUpdateDate\n\t)) ~> SinkProductsCategory\nSourceProductsSubcategory sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tProductSubcategoryKey as integer,\n\t\tProductSubcategoryLabel as integer,\n\t\tProductSubcategoryName as string,\n\t\tProductSubcategoryDescription as string,\n\t\tProductCategoryKey as integer,\n\t\tETLLoadID as integer,\n\t\tLoadDate as date,\n\t\tUpdateDate as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tProductSubcategoryKey,\n\t\tProductSubcategoryLabel,\n\t\tProductSubcategoryName,\n\t\tProductSubcategoryDescription,\n\t\tProductCategoryKey,\n\t\tETLLoadID,\n\t\tLoadDate,\n\t\tUpdateDate\n\t)) ~> SinkProductsSubcategory\nSourceCustomers sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tid as integer,\n\t\tbp_code as string,\n\t\tbp_name as string,\n\t\tbp_type as string,\n\t\tactive as string,\n\t\tbill_to_city as string,\n\t\tbill_to_state as string,\n\t\tbp_currency as string,\n\t\tbill_to_country as string,\n\t\tzone as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tid = {#},\n\t\tbp_code = {BP Code},\n\t\tbp_name = {BP Name},\n\t\tbp_type = {BP Type},\n\t\tactive = Active,\n\t\tbill_to_city = {Bill-to City},\n\t\tbill_to_state = {Bill-to State},\n\t\tbp_currency = {BP Currency},\n\t\tbill_to_country = {Bill-to Country},\n\t\tzone = Zone\n\t)) ~> sinkCustomers\nsourceTransactionSales sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\ttransid as integer,\n\t\tcus_id as string,\n\t\tinvoice_num as string,\n\t\tinvoice_date as date,\n\t\titem_code as integer,\n\t\tdscription as string,\n\t\tqty as integer,\n\t\tunit_price as decimal(23,2)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\ttransid = TransId,\n\t\tcus_id = cus,\n\t\tinvoice_num = invoicenum,\n\t\tinvoice_date = invoicedate,\n\t\titem_code = ItemCode,\n\t\tdscription = Dscription,\n\t\tqty = Quantity,\n\t\tunit_price = {Price for one UNIT}\n\t)) ~> sinkTransactionSales\nsourceTransactionReturn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\ttrans_id as integer,\n\t\tcus_id as string,\n\t\tRINoicenum as string,\n\t\tRINoicedate as date,\n\t\titem_code as integer,\n\t\tdscription as string,\n\t\tqty as integer,\n\t\tunit_price as decimal(23,2)\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\ttrans_id = TransId,\n\t\tcus_id = cus,\n\t\tRINoicenum,\n\t\tRINoicedate,\n\t\titem_code = ItemCode,\n\t\tdscription = Dscription,\n\t\tqty = Quantity,\n\t\tunit_price = {Price Per Unit}\n\t)) ~> sinkTransactionsReturns"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_customers_target')]",
				"[concat(variables('factoryId'), '/datasets/ds_transactionssales_target')]",
				"[concat(variables('factoryId'), '/datasets/ds_transactionsreturns_target')]",
				"[concat(variables('factoryId'), '/datasets/ds_customerTable')]",
				"[concat(variables('factoryId'), '/datasets/ds_transactionsales_table')]",
				"[concat(variables('factoryId'), '/datasets/ds_transactionreturns_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_customers_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_vittreegen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Customer Master.xlsx",
						"fileSystem": "input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "#",
						"type": "String"
					},
					{
						"name": "BP Code",
						"type": "String"
					},
					{
						"name": "BP Name",
						"type": "String"
					},
					{
						"name": "BP Type",
						"type": "String"
					},
					{
						"name": "Active",
						"type": "String"
					},
					{
						"name": "Bill-to City",
						"type": "String"
					},
					{
						"name": "Bill-to State",
						"type": "String"
					},
					{
						"name": "BP Currency",
						"type": "String"
					},
					{
						"name": "Bill-to Country",
						"type": "String"
					},
					{
						"name": "Zone",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_customers_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_vittreegen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customers.csv",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_transactionssales_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_vittreegen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sales",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Transactions - Sales.xlsx",
						"fileSystem": "input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "TransId",
						"type": "String"
					},
					{
						"name": "cus",
						"type": "String"
					},
					{
						"name": "invoicenum",
						"type": "String"
					},
					{
						"name": "invoicedate",
						"type": "String"
					},
					{
						"name": "ItemCode",
						"type": "String"
					},
					{
						"name": "Dscription",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Price for one UNIT",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_transactionssales_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_vittreegen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "transactionsales.csv",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_transactionsreturns_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_vittreegen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Transactions - Sales Return.xlsx",
						"fileSystem": "input"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "TransId",
						"type": "String"
					},
					{
						"name": "cus",
						"type": "String"
					},
					{
						"name": "RINoicenum",
						"type": "String"
					},
					{
						"name": "RINoicedate",
						"type": "String"
					},
					{
						"name": "ItemCode",
						"type": "String"
					},
					{
						"name": "Dscription",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Price Per Unit",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_transactionsreturns_target')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_vittreegen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "transactionsreturns.csv",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_customerTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_vittreeSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "bp_code",
						"type": "varchar"
					},
					{
						"name": "bp_name",
						"type": "varchar"
					},
					{
						"name": "bp_type",
						"type": "varchar"
					},
					{
						"name": "active",
						"type": "varchar"
					},
					{
						"name": "bill_to_city",
						"type": "varchar"
					},
					{
						"name": "bill_to_state",
						"type": "varchar"
					},
					{
						"name": "bp_currency",
						"type": "varchar"
					},
					{
						"name": "bill_to_country",
						"type": "varchar"
					},
					{
						"name": "zone",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "customers"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_transactionsales_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_vittreeSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "transid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cus_id",
						"type": "varchar"
					},
					{
						"name": "invoice_num",
						"type": "varchar"
					},
					{
						"name": "invoice_date",
						"type": "date"
					},
					{
						"name": "item_code",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dscription",
						"type": "varchar"
					},
					{
						"name": "qty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "unit_price",
						"type": "decimal",
						"precision": 23,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "transactions"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_transactionreturns_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_vittreeSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "trans_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cus_id",
						"type": "varchar"
					},
					{
						"name": "RINoicenum",
						"type": "varchar"
					},
					{
						"name": "RINoicedate",
						"type": "date"
					},
					{
						"name": "item_code",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dscription",
						"type": "varchar"
					},
					{
						"name": "qty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "unit_price",
						"type": "decimal",
						"precision": 23,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "transactions_returns"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow copy csv to sql",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_copy_csvtoSQL",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_copy_csvtoSQL')]"
			]
		}
	]
}